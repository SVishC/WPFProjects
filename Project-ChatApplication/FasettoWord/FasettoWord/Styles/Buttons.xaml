<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Styles/Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="Button"
           x:Key="Hoverless">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Window header Menu Button-->
    <Style x:Key="ApplicationSystemIcon" BasedOn="{StaticResource Hoverless}"
           TargetType="{x:Type Button}">
        <Setter Property="Padding"
                Value="10" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome"
                Value="True" />
        <!--Hit testing is nothing but interaction of cursor with that control area.By deafult for window chrome hittesting is disabled-->
    </Style>
    
    <!--Minimize and Maximize button-->

    <Style x:Key="WindowsButtonStyle" TargetType="Button">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome"
                Value="True" />
        <Setter  Property="Foreground"
                 Value="{StaticResource ForegroundMainBrush}" />
        <Setter Property="Padding"
                Value="8" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" />
            </Setter.Value>
        </Setter>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <TextBlock VerticalAlignment="Center"
                                          HorizontalAlignment="Center" Text="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter  Property="Background"
                         Value="{StaticResource BackgroundLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--windows Close button-->

    <Style x:Key="WindowCloseButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource WindowsButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter  Property="Background"
                         Value="Red" />
                <Setter  Property="Foreground"
                         Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Edited Orange button template-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource WordOrangeBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="Padding" Value="50 10"/>
        <Setter Property="Margin" Value="0 10"/>

        
        <!--Default button style-Edited--> 

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            CornerRadius="10" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <TextBlock  
                            Text="{TemplateBinding Content}" 
                            Focusable="False" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}"  
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WordBlue}" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WordOrange}" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WordBlueBrush}"/>
                        </Trigger>-->
                        
                       
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!--Link button-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}"  x:Key="TextButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="Padding" Value="50 10"/>
        <Setter Property="Margin" Value="0 10"/>
        <Setter Property="Cursor" Value="Hand"/>


        <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
                <Border x:Name="border" 
                            CornerRadius="10" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                    <TextBlock  
                            Text="{TemplateBinding Content}" 
                            Focusable="False" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}"  
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"/>
                </Border>
                <ControlTemplate.Triggers>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground"  Value="{StaticResource WordOrangeBrush}"/>

                    </Trigger>


                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
    </Style>


</ResourceDictionary>